// <auto-generated />
using System;
using EntraRoleReaper.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ReaperDbContext))]
    [Migration("20250922063802_v0.45")]
    partial class v045
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("ActivityResourceAction", b =>
                {
                    b.Property<Guid>("MappedActivitiesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MappedResourceActionsId")
                        .HasColumnType("TEXT");

                    b.HasKey("MappedActivitiesId", "MappedResourceActionsId");

                    b.HasIndex("MappedResourceActionsId");

                    b.ToTable("ActivityResourceAction");
                });

            modelBuilder.Entity("ActivityTargetResource", b =>
                {
                    b.Property<Guid>("ActivitiesId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TargetResourcesId")
                        .HasColumnType("TEXT");

                    b.HasKey("ActivitiesId", "TargetResourcesId");

                    b.HasIndex("TargetResourcesId");

                    b.ToTable("ActivityTargetResource");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.PermissionSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrivileged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleDefinitionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleDefinitionId");

                    b.ToTable("PermissionSets");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ResourceAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ActionVerb")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrivileged")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Action")
                        .IsUnique();

                    b.ToTable("ResourceActions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.RoleDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id", "DisplayName")
                        .IsUnique();

                    b.ToTable("RoleDefinitions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantDomain")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AuditCategory")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Service")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("TargetResourceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TargetResourceId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ResourceType")
                        .IsUnique();

                    b.ToTable("TargetResources");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResourceProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSensitive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TargetResourceId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetResourceId");

                    b.ToTable("TargetResourceProperties");
                });

            modelBuilder.Entity("PermissionSetResourceAction", b =>
                {
                    b.Property<Guid>("PermissionSetsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ResourceActionsId")
                        .HasColumnType("TEXT");

                    b.HasKey("PermissionSetsId", "ResourceActionsId");

                    b.HasIndex("ResourceActionsId");

                    b.ToTable("PermissionSetResourceAction");
                });

            modelBuilder.Entity("ResourceActionTargetResourceProperty", b =>
                {
                    b.Property<Guid>("MappedResourceActionsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MappedTargetResourcePropertiesId")
                        .HasColumnType("TEXT");

                    b.HasKey("MappedResourceActionsId", "MappedTargetResourcePropertiesId");

                    b.HasIndex("MappedTargetResourcePropertiesId");

                    b.ToTable("ResourceActionTargetResourceProperty");
                });

            modelBuilder.Entity("ActivityResourceAction", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("MappedActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntraRoleReaper.Api.Data.Models.ResourceAction", null)
                        .WithMany()
                        .HasForeignKey("MappedResourceActionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ActivityTargetResource", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", null)
                        .WithMany()
                        .HasForeignKey("TargetResourcesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.PermissionSet", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.RoleDefinition", null)
                        .WithMany("PermissionSets")
                        .HasForeignKey("RoleDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.Activity", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", null)
                        .WithMany()
                        .HasForeignKey("TargetResourceId");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResourceProperty", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", "TargetResource")
                        .WithMany("Properties")
                        .HasForeignKey("TargetResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetResource");
                });

            modelBuilder.Entity("PermissionSetResourceAction", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.PermissionSet", null)
                        .WithMany()
                        .HasForeignKey("PermissionSetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntraRoleReaper.Api.Data.Models.ResourceAction", null)
                        .WithMany()
                        .HasForeignKey("ResourceActionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ResourceActionTargetResourceProperty", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.ResourceAction", null)
                        .WithMany()
                        .HasForeignKey("MappedResourceActionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResourceProperty", null)
                        .WithMany()
                        .HasForeignKey("MappedTargetResourcePropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.RoleDefinition", b =>
                {
                    b.Navigation("PermissionSets");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Modules.Entra.Graph.Audit.Models.TargetResource", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
