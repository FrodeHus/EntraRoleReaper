// <auto-generated />
using System;
using EntraRoleReaper.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ReaperDbContext))]
    partial class ReaperDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsExcluded")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ActivityProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("ActivityProperties");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.PermissionSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrivileged")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleDefinitionId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleDefinitionId");

                    b.ToTable("PermissionSets");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ResourceAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ActivityPropertyId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrivileged")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("PermissionSetId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Action")
                        .IsUnique();

                    b.HasIndex("ActivityId");

                    b.HasIndex("ActivityPropertyId");

                    b.HasIndex("PermissionSetId");

                    b.ToTable("ResourceActions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.RoleDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TenantId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id", "DisplayName")
                        .IsUnique();

                    b.ToTable("RoleDefinitions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantDomain")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ActivityProperty", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.Activity", null)
                        .WithMany("Properties")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.PermissionSet", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.RoleDefinition", null)
                        .WithMany("PermissionSets")
                        .HasForeignKey("RoleDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ResourceAction", b =>
                {
                    b.HasOne("EntraRoleReaper.Api.Data.Models.Activity", null)
                        .WithMany("MappedResourceActions")
                        .HasForeignKey("ActivityId");

                    b.HasOne("EntraRoleReaper.Api.Data.Models.ActivityProperty", null)
                        .WithMany("MappedResourceActions")
                        .HasForeignKey("ActivityPropertyId");

                    b.HasOne("EntraRoleReaper.Api.Data.Models.PermissionSet", null)
                        .WithMany("ResourceActions")
                        .HasForeignKey("PermissionSetId");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.Activity", b =>
                {
                    b.Navigation("MappedResourceActions");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.ActivityProperty", b =>
                {
                    b.Navigation("MappedResourceActions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.PermissionSet", b =>
                {
                    b.Navigation("ResourceActions");
                });

            modelBuilder.Entity("EntraRoleReaper.Api.Data.Models.RoleDefinition", b =>
                {
                    b.Navigation("PermissionSets");
                });
#pragma warning restore 612, 618
        }
    }
}
